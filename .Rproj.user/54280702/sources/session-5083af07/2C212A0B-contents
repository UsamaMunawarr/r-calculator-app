

# Install and load the necessary packages if you haven't already
# install.packages("shiny")
# install.packages("shinydashboard")

library(shiny)
library(shinydashboard)

# Define custom CSS styles
custom_css <- "
  .result-panel {
    background-color: #f4f4f4;
    padding: 20px;
    border: 2px solid #3498db;
    border-radius: 10px;
    margin-top: 20px;
    font-size: 24px; /* Adjust the font size as needed */
    font-weight: bold;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
  }
"

# Define the UI
ui <- fluidPage(
  titlePanel("🧮 Calculator"),
    sidebarLayout(
      sidebarPanel(
        numericInput("num1", "Enter number 1:", value = 0),
        numericInput("num2", "Enter number 2:", value = 0),
        selectInput("operation", "Select an operation:", 
                    choices = c("➕ Add", "➖ Subtract", "✖️ Multiply", "➗ Divide")),
        actionButton("calculate", "Calculate", icon = icon("play"))
      ),
      mainPanel(
        h4("Result:"),
        div(verbatimTextOutput("result"), class = "result-panel")
      )
    ),
  # Include custom CSS
  tags$style(HTML(custom_css))
)

# Define the server logic
server <- function(input, output) {
  observeEvent(input$calculate, {
    num1 <- input$num1
    num2 <- input$num2
    operation <- input$operation
    
    result <- switch(
      operation,
      "➕ Add" = num1 + num2,
      "➖ Subtract" = num1 - num2,
      "✖️ Multiply" = num1 * num2,
      "➗ Divide" = if (num2 != 0) num1 / num2 else "Undefined"
    )
    
    output$result <- renderText({
      if (is.numeric(result)) {
        paste("Result: 🎉", result)  # Added emoji to the result
      } else {
        paste("Result: ❌ Undefined (division by zero)")  # Added emoji for undefined result
      }
    })
  })
}

# Run the Shiny app
shinyApp(ui, server)
